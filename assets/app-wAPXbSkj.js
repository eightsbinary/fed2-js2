(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))r(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const n of s.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&r(n)}).observe(document,{childList:!0,subtree:!0});function t(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(o){if(o.ep)return;o.ep=!0;const s=t(o);fetch(o.href,s)}})();const R="505f6d75-61e2-46c7-98f0-a4422c9e4b02",b="https://v2.api.noroff.dev",C=`${b}/auth`,_=`${C}/login`,F=`${C}/register`,$=`${b}/social`,p=`${$}/posts`,m=`${$}/profiles`,A="application/json";function i(){const a=new Headers;a.append("X-Noroff-API-Key",R);let e;try{e=d.AuthService.authToken,e&&a.append("Authorization",`Bearer ${e}`)}catch(t){console.error("Error retrieving auth token:",t)}return a.append("Content-Type",A),a}class E{constructor(e,t,r,o,s=[],n,c,h,y,T){this._count=e,this.author=t,this.body=r,this.created=o,this.comments=s,this.id=n,this.media=c,this.tags=h,this.title=y,this.updated=T}}class j{constructor(e=[]){this.posts=e.map(t=>new E(t._count,t.author,t.body,t.created,t.comments,t.id,t.media,t.tags,t.title,t.updated))}}class P{constructor(e={},t={},r={},o=[],s="",n=[],c=[],h="",y=""){this._count=e,this.avatar=t,this.banner=r,this.bio=o,this.email=s,this.followers=n,this.following=c,this.name=h,this.posts=y}}class k{constructor(e=[]){this.profiles=e.map(t=>new P(profile._count,profile.avatar,profile.banner,profile.bio,profile.email,profile.followers,profile.following,profile.name,profile.posts))}}let I=class{constructor(e,t,r,o,s){this.name=e,this.email=t,this.avatar=r,this.bio=o,this.banner=s}};class v{constructor({name:e,email:t,bio:r,banner:o,avatar:s}){this.name=e,this.email=t,this.bio=r,this.banner=o?new S(o):null,this.avatar=s?new S(s):null}}class S{constructor({url:e,alt:t}){this.url=e,this.alt=t}}class D{constructor({followers:e=[],following:t=[]}){this.followers=Array.isArray(e)?e.map(r=>new v(r)):[],this.following=Array.isArray(t)?t.map(r=>new v(r)):[]}}class L{constructor(e,t,r,o,s,n){this.body=e,this.created=t,this.id=r,this.owner=o,this.postId=s,this.replyToId=n}}const l={Post:E,Posts:j,Profile:P,Profiles:k,User:I,Follow:D,Comment:L};class U{async login(e,t){const r=await fetch(`${_}`,{method:"POST",headers:i(),body:JSON.stringify({email:e,password:t})});if(!r.ok)throw new Error("Login Failed");try{const o=await r.json(),{data:s,meta:n}=o;return{success:!0,token:s.accessToken,user:new l.User(s.name,s.email,s.avatar,s.bio,s.banner),meta:n}}catch(o){return{success:!1,message:o.message}}}async register(e,t,r){const o=await fetch(`${F}`,{method:"POST",headers:i(),body:JSON.stringify({name:e,email:t,password:r})});if(!o.ok)throw new Error("Registration failed");try{const s=await o.json(),{data:n,meta:c}=s;return new l.User(n.name,n.email)}catch(s){return{success:!1,message:s.message}}}}const O=new U;class x{async posts(e=1){const t=`${p}?limit=12&page=${e}&_author=true&_comments=true`,r=await fetch(t,{method:"GET",headers:i()});if(!r.ok)throw new Error("Fetching all posts failed");try{const{data:o,meta:s}=await r.json();return{success:!0,data:new l.Posts(o),meta:s}}catch(o){return{success:!1,message:o.message}}}async post(e){const t=`${p}/${e}?_author=true&_comments=true`,r=await fetch(t,{method:"GET",headers:i()});if(!r.ok)throw new Error("Fetching single posts failed");try{const o=await r.json(),{data:s,meta:n}=o;return{success:!0,data:new l.Post(s._count,s.author,s.body,s.created,s.comments,s.id,s.media,s.tags,s.title,s.updated),meta:n}}catch(o){return{success:!1,message:o.message}}}async create(e){const t=JSON.stringify(e),r=`${p}`,o=await fetch(r,{method:"POST",headers:i(),body:t});if(!o.ok)throw new Error("Creating post failed");try{const s=await o.json(),{data:n,meta:c}=s;return{success:!0,data:new l.Post(n._count,n.author,n.body,n.created,n.comments,n.id,n.media,n.tags,n.title,n.updated),meta:c}}catch(s){return{success:!1,message:s.message}}}async update(e,t){const r=JSON.stringify(t),o=`${p}/${e}`,s=await fetch(o,{method:"PUT",headers:i(),body:r});if(!s.ok)throw new Error(`Error: ${s.statusText}`);try{const n=await s.json(),{data:c,meta:h}=n;return{success:!0,data:new l.Post(c._count,c.author,c.body,c.created,c.comments,c.id,c.media,c.tags,c.title,c.updated),meta:h}}catch(n){return{success:!1,message:n.message}}}async delete(e){const t=`${p}/${e}`,r=await fetch(t,{method:"DELETE",headers:i()});if(r.status===204)return{success:!0,message:"Post deleted successfully."};if(!r.ok)throw new Error(`Error: ${r.statusText}`);try{const o=await r.json(),{data:s,meta:n}=o;return{success:!0,data:s,meta:n}}catch(o){return{success:!1,message:o.message}}}}const N=new x;class q{async profiles(){const e=`${m}?_posts=true&_following=true&_followers=true`,t=await fetch(e,{method:"GET",headers:i()});if(!t.ok)throw new Error("Fetching profiles failed");try{const r=await t.json(),{data:o,meta:s}=r;return{success:!0,data:new l.Profiles(o),meta:s}}catch(r){return{success:!1,message:r.message}}}async profile(e){const t=`${m}/${e}?_posts=true&_following=true&_followers=true`,r=await fetch(t,{method:"GET",headers:i()});if(!r.ok)throw new Error("Fetching profile failed");try{const{data:o,meta:s}=await r.json();return{success:!0,data:new l.Profile(o._count,o.avatar,o.banner,o.bio,o.email,o.followers,o.following,o.name,o.posts),meta:s}}catch(o){return{success:!1,message:o.message}}}async update(e,t){const r=JSON.stringify(t),o=`${m}/${e}`,s=await fetch(o,{method:"PUT",headers:i(),body:r});if(!s.ok)throw new Error("Update profile failed");try{const n=await s.json(),{data:c,meta:h}=n;return{success:!0,data:new l.Profile(c._count,c.avatar,c.banner,c.bio,c.email,c.followers,c.following,c.name,c.posts),meta:h}}catch(n){return{success:!1,message:n.message}}}async posts(e,t=1){const r=`${m}/${e}/posts?limit=12&page=${t}&_author=true&_posts=true&_following=true&_followers=true&_comments=true`,o=await fetch(r,{method:"GET",headers:i()});if(!o.ok)throw new Error("Fetching all posts by profile failed");try{const{data:s,meta:n}=await o.json();return{success:!0,data:new l.Posts(s),meta:n}}catch(s){return{success:!1,message:s.message}}}async follow(e){const t=`${m}/${e}/follow`,r=await fetch(t,{method:"PUT",headers:i()});if(!r.ok)throw new Error("Follow author failed");try{const o=await r.json(),{data:s,meta:n}=o;return{success:!0,data:s,meta:n}}catch(o){return{success:!1,message:o.message}}}async unfollow(e){const t=`${m}/${e}/unfollow`,r=await fetch(t,{method:"PUT",headers:i()});if(!r.ok)throw new Error("Unfollow user failed");try{const o=await r.json(),{data:s,meta:n}=o;return{success:!0,data:s,meta:n}}catch(o){return{success:!1,message:o.message}}}async search(e){const t=`${m}/search?q=${e}`,r=await fetch(t,{method:"GET",headers:i()});if(!r.ok)throw new Error("Search profile with query failed");try{const o=await r.json(),{data:s,meta:n}=o;return{success:!0,data:new l.Profile(s._count,s.avatar,s.banner,s.bio,s.email,s.followers,s.following,s.name,s.posts),meta:n}}catch(o){return{success:!1,message:o.message}}}}const B=new q;class z{async tags(e){const t=await fetch(`${p}/?_tag=${e}&_author=true&limit=12`,{method:"GET",headers:i()});if(!t.ok)throw new Error("Fetching profiles failed");try{const r=await t.json(),{data:o,meta:s}=r;return{success:!0,data:new l.Posts(o),meta:s}}catch(r){return{success:!1,message:r.message}}}}const G=new z;class M{async follow(e){const t=await fetch(`${m}/${e}/follow`,{method:"PUT",headers:i()});if(!t.ok)throw new Error("Fetching follow failed");try{const r=await t.json(),{data:o,meta:s}=r;return{success:!0,data:new l.Follow(o),meta:s}}catch(r){return{success:!1,message:r.message}}}async unfollow(e){const t=await fetch(`${m}/${e}/unfollow`,{method:"PUT",headers:i()});if(!t.ok)throw new Error("Fetching unfollow failed");try{const r=await t.json(),{data:o,meta:s}=r;return{success:!0,data:new l.Follow(o),meta:s}}catch(r){return{success:!1,message:r.message}}}async network(e){const t=await fetch(`${m}/${e}?_following=true&_follower=true`,{method:"GET",headers:i()});if(!t.ok)throw new Error("Fetching following failed");try{const r=await t.json(),{data:o,meta:s}=r;return{success:!0,data:new l.Follow(o),meta:s}}catch(r){return{success:!1,message:r.message}}}}const H=new M;class J{async posts(e,t=1){const r=`${p}/search?q=${e}&limit=12&page=${t}&_author=true&_comments=true`;try{const o=await fetch(r,{method:"GET",headers:i()});if(!o.ok){const c=await o.text();throw new Error(`API error: ${o.status} ${o.statusText}. Details: ${c}`)}const{data:s,meta:n}=await o.json();return{success:!0,data:new l.Posts(s),meta:n}}catch(o){return{success:!1,message:o.message}}}}const K=new J;class Y{async comments(e){const t=`${p}/${e}?_author=true&_comments=true`,r=await fetch(t,{method:"GET",headers:i()});if(!r.ok)throw new Error("Fetching comments failed");try{const o=await r.json(),{data:s,meta:n}=o;return{success:!0,data:new l.Post(s._count,s.author,s.body,s.created,s.comments,s.id,s.media,s.tags,s.title,s.updated),meta:n}}catch(o){return{success:!1,message:o.message}}}async create(e,t){const r=JSON.stringify(t),o=`${p}/${e}/comment`,s=await fetch(o,{method:"POST",headers:i(),body:r});if(!s.ok)throw new Error("Create comments failed");try{const n=await s.json(),{data:c,meta:h}=n;return{success:!0,data:new l.Comment(c.body,c.created,c.id,c.owner,c.postId,c.replyToId),meta:h}}catch(n){return{success:!1,message:n.message}}}async delete(e,t){try{const r=`${p}/${e}/comment/${t}`,o=await fetch(r,{method:"DELETE",headers:i()});if(o.status===204)return{success:!0,message:"Comment deleted successfully."};if(!o.ok){const h=await o.text();throw new Error(`API error: ${o.status} ${o.statusText}. Details: ${h}`)}const s=await o.json(),{data:n,meta:c}=s;return{success:!0,data:new l.Comment(n),meta:c}}catch(r){return{success:!1,message:r.message}}}}const W=new Y,w={AuthRepository:O,PostRepository:N,ProfileRepository:B,TagRepository:G,FollowRepository:H,SearchRepository:K,CommentRepository:W};class V{constructor(e="token",t="user"){this.tokenKey=e,this.userKey=t,this.authRepository=w.AuthRepository}get authToken(){return localStorage.getItem(this.tokenKey)}set authToken(e){localStorage.setItem(this.tokenKey,e)}get authUser(){const e=localStorage.getItem(this.userKey);return e?JSON.parse(e):null}set authUser(e){localStorage.setItem(this.userKey,JSON.stringify(e))}clearAuthData(){localStorage.removeItem(this.tokenKey),localStorage.removeItem(this.userKey)}async login(e,t){return await this.authRepository.login(e,t)}async register(e,t,r){return await this.authRepository.register(e,t,r)}logout(){this.clearAuthData()}}const X=new V;class Q{constructor(){this.postRepository=w.PostRepository}async posts(e=1){return await this.postRepository.posts(e)}async post(e){return await this.postRepository.post(e)}async create(e){if(!e.title||!e.body)throw new Error("Title and Body are required to create a post");return await this.postRepository.create(e)}async update(e,t){if(!t.title||!t.body)throw new Error("Title and Body are required to create a post");return await this.postRepository.update(e,t)}async delete(e){return await this.postRepository.delete(e)}}const Z=new Q;class ee{constructor(){this.profileRepository=w.ProfileRepository}async profiles(){return await this.profileRepository.profiles()}async profile(e){return await this.profileRepository.profile(e)}async update(e,t){return await this.profileRepository.update(e,t)}async posts(e,t=1){return await this.profileRepository.posts(e,t)}async follow(e){return await this.profileRepository.follow(e)}async unfollow(e){return await this.profileRepository.unfollow(e)}async search(e){return await this.profileRepository.search(e)}}const te=new ee;class re{constructor(){this.tagRepository=w.TagRepository}async tags(e){return await this.tagRepository.tags(e)}}const oe=new re;class se{constructor(){this.followRepository=w.FollowRepository}async follow(e){return await this.followRepository.follow(e)}async unfollow(e){return await this.followRepository.unfollow(e)}async network(e){return await this.followRepository.network(e)}}const ae=new se;class ne{constructor(){this.searchRepository=w.SearchRepository}async posts(e,t=1){return await this.searchRepository.posts(e,t)}}const ce=new ne;class ie{constructor(){this.commentRepository=w.CommentRepository}async comments(e){return this.commentRepository.comments(e)}async create(e,t){return this.commentRepository.create(e,t)}async delete(e,t){return this.commentRepository.delete(e,t)}}const le=new ie,d={AuthService:X,PostService:Z,ProfileService:te,TagService:oe,FollowService:ae,SearchService:ce,CommentService:le};class ue{constructor(){this.authService=d.AuthService}async login({email:e,password:t}){try{const{token:r,user:o}=await this.authService.login(e,t);return{token:r,user:o}}catch(r){throw console.error("Login error:",r),new Error("Login failed. Please check your credentials.")}}async register({name:e,email:t,password:r}){try{const o=await this.authService.register(e,t,r);return{name:e,email:t}}catch(o){throw console.error("Register error:",o),new Error("Register Failed. Please check you data input.")}}logout(){try{this.authService.logout(),console.log("Logout successful")}catch(e){console.error("Logout failed:",e)}}get authToken(){try{return this.authService.authToken}catch(e){console.error("Failed to get authToken:",e)}}set authToken(e){try{this.authService.authToken=e}catch(t){console.error("Failed to set authToken:",t)}}get authUser(){try{return this.authService.authUser}catch(e){console.error("Failed to get authUser:",e)}}set authUser(e){try{this.authService.authUser=e}catch(t){console.error("Failed to set authUser:",t)}}clearAuthData(){this.authService.clearAuthData()}}const g=new ue,u={redirectTo:a=>{if(typeof a!="string")throw new Error("path must be a string");window.location.href=a},getUrlParams:a=>new URLSearchParams(window.location.search).get(a),date:a=>{const e=new Date(a),t=new Date,r=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],o=e.getDate();let n=`${r[e.getMonth()]} ${o}`;return e.getFullYear()!==t.getFullYear()&&(n+=` ${e.getFullYear()}`),n},formatTags:a=>(typeof a=="string"&&(a=[a]),!a||a.length===0?"":a.map(e=>`<a href="/tags/?tag=${encodeURIComponent(e)}" class="tag bg-gray-100 rounded-2xl text-sm px-1 py-2 hover:bg-gray-200">#${e}</a>`).join(" "))};class he{constructor(e){this.authController=g}async onLogin(e){e.preventDefault();const t=e.target,r=new FormData(t),o=Object.fromEntries(r.entries());await this.handleLogin(o)}async handleLogin(e){try{const{email:t,password:r}=e,{token:o,user:s}=await this.authController.login({email:t,password:r});console.log("Login success:",{user:s}),d.AuthService.authToken=o,d.AuthService.authUser=s,u.redirectTo("/")}catch(t){console.error("Login failed:",t)}}}const de=new he;class me{constructor(e){this.authController=g,this.initEvents()}initEvents(){const e=document.getElementsByClassName("btn-danger");Array.from(e).forEach(t=>{t.addEventListener("click",r=>this.handleLogout(r))})}handleLogout(e){e.preventDefault(),this.authController.logout(),u.redirectTo("/auth/login/")}}class pe{constructor(){this.postService=d.PostService}async posts(e=1){try{const{success:t,data:r,meta:o}=await this.postService.posts(e);return{success:t,data:r,meta:o}}catch(t){throw console.error("Fetch posts error:",t),new Error("Fetch posts failed.")}}async post(e){try{const{data:t,meta:r}=await this.postService.post(e);return{data:t,meta:r}}catch(t){throw console.error("Fetch post error:",t),new Error("Fetch single post failed.")}}async create(e){try{const{data:t,meta:r}=await this.postService.create(e);console.log("Create post success:",{postData:t}),u.redirectTo(`/post/?id=${t.id}`)}catch(t){console.error("Create post failed:",t)}}async update(e,t){try{const{data:r,meta:o}=await this.postService.update(e,t);console.log("Create post success:",{postData:r}),u.redirectTo(`/post/?id=${r.id}`)}catch(r){console.error("Create post failed:",r)}}async delete(e){try{const t=await this.postService.delete(e);t.success?(console.log(t.message),alert(t.message),u.redirectTo("/")):(console.error("Failed to delete post:",result.message),alert("Error deleting post"))}catch(t){console.error("Error deleting post:",t),alert("An error occurred while deleting the post.")}}async onCreatePost(e){e.preventDefault();const t=e.target,r=new FormData(t),o=Object.fromEntries(r.entries());o.tags&&(o.tags=this.structuredTags(o.tags)),o.media&&(o.media=this.structuredMedia(o)),await this.create(o)}structuredTags(e){return e?e.split(",").map(t=>t.trim()):[]}structuredMedia(e){return{url:e.media,alt:e.alt||""}}async onUpdatePost(e,t){const r=e.target,o=new FormData(r),s=Object.fromEntries(o.entries());s.tags&&(s.tags=this.structuredTags(s.tags)),s.media&&(s.media=this.structuredMedia(s)),await this.update(t,s)}onCancelPost(e=null){e||u.redirectTo("/"),e&&u.redirectTo(`/post/?id=${e}`)}async onDeletePost(e){await this.delete(e)}}const fe=new pe;class we{constructor(){this.profileService=d.ProfileService}async profile(e){try{const{data:t,meta:r}=await this.profileService.profile(e);return{data:t,meta:r}}catch(t){throw console.error("Fetch profile error:",t),new Error("Fetch profile failed.")}}async update(e,t){try{const r=await this.profileService.update(e,t);if(r.success){const{data:o,meta:s}=r;console.log("Update profile success:",{profileData:o}),alert("Profile update success"),u.redirectTo("/profile/")}else console.error("Failed to update profile:",r.message),alert("Failed to update profile. Please try again.")}catch(r){throw console.error("Update profile error:",r),new Error("Update profile failed.")}}async posts(e){try{const{data:t,meta:r}=await this.profileService.posts(e);return{data:t,meta:r}}catch(t){throw console.error("Fetch posts on profile error:",t),new Error("Fetch posts on profile failed.")}}async onUpdateProfile(e,t){const r=e.target,o=new FormData(r),s=Object.fromEntries(o.entries()),n=this.structureProfileData(s);await this.update(t,n)}structureProfileData(e){return{bio:e.bio,avatar:typeof e.avatar=="string"?{url:e.avatar,alt:e.avatarAlt}:e.avatar,banner:typeof e.banner=="string"?{url:e.banner,alt:e.bannerAlt}:e.banner}}onCancelProfileUpdate(){u.redirectTo("/profile/")}}const ye=new we;class ge{constructor(e){this.authController=g}async onRegister(e){e.preventDefault(),console.log("click");const t=e.target,r=new FormData(t),o=Object.fromEntries(r.entries());await this.handleRegister(o)}async handleRegister(e){try{const{name:t,email:r,password:o}=e;console.log("data",t,r,o);const s=await this.authController.register({name:t,email:r,password:o});console.log("Register success:",{name:t,email:r}),u.redirectTo("/")}catch(t){console.error("Register failed:",t)}}}const ve=new ge;class Se{constructor(){this.tagService=d.TagService}async tags(e){try{const{data:t,meta:r}=await this.tagService.tags(e);return{data:t,meta:r}}catch(t){throw console.error("Fetch tags error:",t),new Error("Fetch tags failed.")}}}const be=new Se;class Ce{constructor(){this.followService=d.FollowService}async follow(e){try{const{success:t,data:r,meta:o}=await this.followService.follow(e);return{success:t,data:r,meta:o}}catch(t){throw console.error("Fetch follow error:",t),new Error("Fetch follow failed.")}}async unfollow(e){try{const{success:t,data:r,meta:o}=await this.followService.unfollow(e);return{success:t,data:r,meta:o}}catch(t){throw console.error("Fetch follow error:",t),new Error("Fetch follow failed.")}}async network(e){try{const{success:t,data:r,meta:o}=await this.followService.network(e);return{success:t,data:r,meta:o}}catch(t){throw console.error("Fetch follow error:",t),new Error("Fetch follow failed.")}}}const $e=new Ce;class Ee{constructor(){this.searchService=d.SearchService}async posts(e,t=1){try{const{success:r,data:o,meta:s}=await this.searchService.posts(e,t);return{success:r,data:o,meta:s}}catch(r){throw console.error("Fetch search error:",r),new Error("Fetch search failed.")}}onSearch(e){u.redirectTo(`/search/?q=${encodeURIComponent(e)}`)}}const Pe=new Ee;async function Te(a,e){await Fe(a,e),await Ie()}function Re(a){const e=f.AuthController.authUser;return e&&e.name===a}function _e(a){if(!a)return 0}function Fe(a,e){const t=document.createElement("div");if(t.id="comment-trees-container",t.setAttribute("class","comments my-8"),t.innerHTML="",!Array.isArray(a)){const r=f.AuthController.authUser;return a.author=r,[a]}a.forEach(r=>{const o=Ae(r);t.appendChild(o)}),e.appendChild(t)}function Ae(a){const e=_e(a.replyToId),t=document.createElement("div");return t.classList.add("comment-wrapper",`comment-wrapper-deep-${e}`),e===0&&t.classList.add("root"),t.setAttribute("data-comment-id",a.id),t.setAttribute("data-post-id",a.postId),t.innerHTML=`
      <div id="comment-node-${a.id}" class="comment single-comment-node flex items-center ${e===0?"root":""} comment--deep-${e}" data-comment-author-id="1255465" data-user-id="1255465">
        <div class="comment__inner flex">
          ${je(a.author.name,a.author.avatar.url,a.author.avatar.alt)}
          ${ke(a.author.name,u.date(a.created),a.body)}
        </div>
      </div>
    `,t}function je(a,e,t){return`
    <a class="shirnk-0 mr-4" href="/profile/?author=${a}">
      <img class="h-8 w-8 rounded-full" src="${e}" alt="${t}" loading="lazy" />
    </a>
  `}function ke(a,e,t){return f.AuthController.authUser,`
      <div class="inner-comment comment__details">
        <div class="comment__content mb-1">
          <div class="flex items-center">
            <div class="relative font-medium">
              <a id="comment-profile-preview-trigger-1251256" class="profile-preview-card__trigger p-1 -my-1 -mlk-1" href="/profile/?author=${a}">
                ${a}
              </a>
            </div>
            <span class="color-base-30 px-2 m:pl-0" role="presentation">•</span>
            <div class="comment-date text-gray-600 text-sm">${e}</div>
            ${Re(a)?`<div class="comment__delete">
              <button class="btn btn__delete-comment">Delete</button>
            </div>`:""}
          </div>
          <dic class="comment__body text-lg">
            <p>${t}</p>
          </div>
          ${Le()}
        </div>
      </div>
    `}function Ie(){document.querySelectorAll(".btn__delete-comment").forEach(e=>{e.addEventListener("click",De)})}async function De(a){const e=a.target.closest(".comment-wrapper"),t=Number(e.dataset.postId),r=Number(e.dataset.commentId);await f.CommentController.onDelete(t,r,e)}function Le(){return`
      <footer class="comment__footer">
        ${Ue()}
        ${Oe()}
      </footer>
    `}function Ue(){return`
      <button class="tooltip__activator btn btn--ghost btn--icon-left btn-s mr-1 reaction-link inline-flex reaction-button" 
        id="button-for-comment-1251256" 
        data-comment-id="1251256" 
        aria-label="like" 
        data-tracking-name="comment_heart_button" 
        aria-pressed="false">
        
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" role="img" aria-labelledby="aj3j3dglouede37ubxl9e3f4p1pidimm" class="crayons-icon reaction-icon not-reacted">
          <title id="aj3j3dglouede37ubxl9e3f4p1pidimm">Like comment:</title>
          <path d="M18.884 12.595l.01.011L12 19.5l-6.894-6.894.01-.01A4.875 4.875 0 0112 5.73a4.875 4.875 0 016.884 6.865zM6.431 7.037a3.375 3.375 0 000 4.773L12 17.38l5.569-5.569a3.375 3.375 0 10-4.773-4.773L9.613 10.22l-1.06-1.062 2.371-2.372a3.375 3.375 0 00-4.492.25v.001z"></path>
        </svg>
  
        <span class="reactions-count" id="reactions-count-1251256">2</span>
        <span class="reactions-label m:inline-block">&nbsp;likes</span>
      </button>
    `}function Oe(){return`
      <a class="actions btn btn-reply btn--ghost btn--s btn--icon-left toggle-reply-form mr-1 inline-flex" 
        href="#/tymzap/dont-ever-use-if-else-use-this-instead-512h/comments/new/2j4p6" 
        data-comment-id="1251256" 
        data-path="/tymzap/dont-ever-use-if-else-use-this-instead-512h/comments/2j4p6" 
        data-tracking-name="comment_reply_button" 
        data-testid="reply-button-1251256" 
        rel="nofollow">
        
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" role="img" aria-labelledby="anl4azo1zr0a396xnn3syhhaz50hpbjb" class="icon reaction-icon not-reacted">
          <title id="anl4azo1zr0a396xnn3syhhaz50hpbjb">Comment button</title>
          <path d="M10.5 5h3a6 6 0 110 12v2.625c-3.75-1.5-9-3.75-9-8.625a6 6 0 016-6zM12 15.5h1.5a4.501 4.501 0 001.722-8.657A4.5 4.5 0 0013.5 6.5h-3A4.5 4.5 0 006 11c0 2.707 1.846 4.475 6 6.36V15.5z"></path>
        </svg>
        
        <span class="m:inline-block">Reply</span>
      </a>
    `}class xe{constructor(){this.commentService=d.CommentService}async comments(e){try{const{data:t,meta:r}=await this.commentService.comments(e);return{data:this.sortedCommentsDateAsc(t),meta:r}}catch(t){throw console.error("Fetch comments error:",t),new Error("Fetch comments failed.")}}async create(e,t){try{const{success:r,data:o,meta:s}=await this.commentService.create(e,t);return console.log("Create comment success:",o),{success:r,commentData:o,meta:s}}catch(r){throw console.error("Create comment error:",r),new Error("Create comment failed.")}}async delete(e,t){try{const{success:r,data:o,meta:s}=await this.commentService.delete(e,t);return{success:r,data:o,meta:s}}catch(r){throw console.error("Delete comment error:",r),new Error("Delete comment failed.")}}sortedCommentsDateAsc(e){const t=e.comments.sort((r,o)=>new Date(r.created)-new Date(o.created));return{...e,comments:t}}structuredCommentData(e,t=null){return t?{body:e,replyToId:Number(t)}:{body:e}}async reRenderComment(e){const{data:t}=await this.comments(e),r=document.querySelector("section");if(r){const o=r.querySelector("#comment-trees-container");o&&o.remove(),await Te(t.comments,r)}}async onComment(e,t){e.preventDefault();const r=e.target,o=new FormData(r),s=Object.fromEntries(o.entries()),{comment:n}=s,c=this.structuredCommentData(n);this.createHandler(t,c),document.querySelector("#comment-trees-container")}async createHandler(e,t){const{success:r,commentData:o}=await this.create(e,t);if(r){const s=document.querySelector("section");s&&s.querySelector("#comment-trees-container")&&(await this.reRenderComment(e),this.clearCommentInput())}else alert("An error occurred while creating the comment. Please try again.")}clearCommentInput(){const e=document.getElementById("text-area");e.value=""}async onDelete(e,t,r){confirm("Are you sure you want to delete this comment?")&&await this.deleteHandler(e,t,r)}async deleteHandler(e,t,r){const{success:o}=await this.delete(e,t);o?(r.remove(),alert("Comment deleted successfully!")):alert("An error occurred while deleting the comment. Please try again.")}}const Ne=new xe,f={AuthController:g,LoginController:de,LogoutController:me,PostController:fe,ProfileController:ye,RegisterController:ve,TagsController:be,FollowController:$e,SearchController:Pe,CommentController:Ne};function qe(){return!!d.AuthService.authToken}const Be={"/":{path:"/src/js/router/views/home.js",protected:!0},"/auth/":{path:"/src/js/router/views/auth/auth.js",protected:!1},"/auth/login/":{path:"/src/js/router/views/auth/login.js",protected:!1},"/auth/register/":{path:"/src/js/router/views/auth/register.js",protected:!1},"/post/":{path:"/src/js/router/views/post/index.js",protected:!0},"/post/create/":{path:"/src/js/router/views/post/create.js",protected:!0},"/post/edit/":{path:"/src/js/router/views/post/update.js",protected:!0},"/profile/":{path:"/src/js/router/views/profile/index.js",protected:!0},"/profile/edit/":{path:"/src/js/router/views/profile/update.js",protected:!0},"/tags/":{path:"/src/js/router/views/tags/index.js",protected:!0},"/follow/":{path:"/src/js/router/views/follow/index.js",protected:!0},"/search/":{path:"/src/js/router/views/search/index.js",protected:!0},"/notFound/":{path:"/src/js/router/views/notFound.js",protected:!1}};async function ze(a=window.location.pathname){const e=Be[a];try{const t=await import(e.path);if(e.protected&&!qe()){alert("You must be logged in to view this page"),u.redirectTo("/auth/login/");return}}catch(t){console.error("Error loading route module:",t)}}await ze(window.location.pathname);new f.LogoutController(f.AuthController);function Ge(){Me()}function Me(){const a=document.querySelector('form[name="search"]');a&&(a.addEventListener("submit",He),document.getElementById("search-input").addEventListener("keypress",Je))}function He(a){a.preventDefault();const t=document.getElementById("search-input").value.trim();t&&f.SearchController.onSearch(t)}function Je(a){if(a.key==="Enter"){a.preventDefault();const e=a.target.value.trim();e&&f.SearchController.onSearch(e)}}Ge();
